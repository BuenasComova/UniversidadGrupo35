/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package universidadgrupo35.vistas;

import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import universidadgrupo35.accesoaDatos.AlumnoData;
import universidadgrupo35.accesoaDatos.InscripcionData;
import universidadgrupo35.accesoaDatos.MateriaData;
import universidadgrupo35.entidades.Alumno;
import universidadgrupo35.entidades.Inscripcion;
import universidadgrupo35.entidades.Materia;

/**
 *
 * @author Hp
 */
public class InscripcionView extends javax.swing.JInternalFrame {

 private DefaultTableModel modelo;
 private ArrayList<Inscripcion> listaInscripcion ;
 private ArrayList<Materia> listaMateria ;
 private ArrayList<Alumno> listaAlumno ;
         
 private AlumnoData ad;
 private MateriaData md;
 private InscripcionData id;
 
 /**
     * Creates new form InscripcionView
     */
    public InscripcionView() {
        initComponents();
        modelo = (DefaultTableModel)jTMaterias.getModel();
        listaInscripcion = new ArrayList<Inscripcion>();
        listaMateria = new ArrayList<Materia>();
        listaAlumno = new ArrayList<Alumno> ();
        ad = new AlumnoData();
        md = new MateriaData();
        id = new InscripcionData();
        
        listaInscripcion = (ArrayList<Inscripcion>) id.obtenerInscripciones();
        
        listaMateria= (ArrayList<Materia>) md.listarMaterias();
        
        listaAlumno= (ArrayList<Alumno>) ad.listarAlumnos();
        
        
        cargarAlumnoCombo();
        
      // armarCabeceraDeTabla();
      
        
                
    }
public void cargarAlumnoCombo(){
    
   for (Alumno a: listaAlumno ){
       
       jCBAlumno.addItem(a);
   
}
    
} 
   public void armarCabeceraDeTabla(){ 
       
       ArrayList<Object> columnas = new ArrayList<>();
       columnas.add("ID");
       columnas.add("Nombre");
       columnas.add("Año");
       
       for(Object it:columnas){
           
           modelo.addColumn(it);
       }
       
       jTMaterias.setModel(modelo);
       
       }
       
 public void borrarFilaTabla(){
    int a =modelo.getRowCount()-1;
    for(int i=a;i>=0;i--){
        modelo.removeRow(i);}
    }  
 
 
private void cargarDatosNoInscriptas(){
    Alumno select = (Alumno)jCBAlumno.getSelectedItem();
    
   listaMateria = (ArrayList<Materia>) id.obtenerMateriasNoCursadas(select.getIdAlumno());
    for (Materia m: listaMateria){
    modelo.addRow(new Object[]{ m.getIdMateria(),m.getNombre(),m.getAnio()});
    }
}

private void cargarDatosInscriptas(){
    Alumno select = (Alumno)jCBAlumno.getSelectedItem();
    List<Materia> lista = id.obtenerMateriasCursadas(select.getIdAlumno());
    for (Materia m: lista){
        modelo.addRow(new Object[]{ m.getIdMateria(),m.getNombre(),m.getAnio()});
    }
    
}
 
 /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLFormularioDeInscripcion = new javax.swing.JLabel();
        jLSeleccioneAlumno = new javax.swing.JLabel();
        jCBAlumno = new javax.swing.JComboBox<>();
        jLListadoDeMaterias = new javax.swing.JLabel();
        jRBMateriasInscriptas = new javax.swing.JRadioButton();
        jRBMateriasNoInscriptas = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTMaterias = new javax.swing.JTable();
        jBInscribir = new javax.swing.JButton();
        jBAnularInscripcion = new javax.swing.JButton();
        JBSalir = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(600, 700));

        jLFormularioDeInscripcion.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLFormularioDeInscripcion.setText("Formulario de inscripcion");

        jLSeleccioneAlumno.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLSeleccioneAlumno.setText("Seleccione un alumno:");

        jLListadoDeMaterias.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLListadoDeMaterias.setText("Listado de materias");

        buttonGroup1.add(jRBMateriasInscriptas);
        jRBMateriasInscriptas.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jRBMateriasInscriptas.setText("Materias inscriptas");
        jRBMateriasInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBMateriasInscriptasActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRBMateriasNoInscriptas);
        jRBMateriasNoInscriptas.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jRBMateriasNoInscriptas.setText("Materias no inscriptas");
        jRBMateriasNoInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBMateriasNoInscriptasActionPerformed(evt);
            }
        });

        jTMaterias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "idMateria", "Nombre", "Año"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTMaterias.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTMaterias);

        jBInscribir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jBInscribir.setText("Inscribir");
        jBInscribir.setEnabled(false);
        jBInscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBInscribirActionPerformed(evt);
            }
        });

        jBAnularInscripcion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jBAnularInscripcion.setText("Anular inscripcion");
        jBAnularInscripcion.setEnabled(false);
        jBAnularInscripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAnularInscripcionActionPerformed(evt);
            }
        });

        JBSalir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        JBSalir.setText("Salir");
        JBSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jRBMateriasInscriptas)
                        .addGap(128, 128, 128)
                        .addComponent(jRBMateriasNoInscriptas))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLSeleccioneAlumno)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCBAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(103, 103, 103))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jBInscribir)
                                .addGap(114, 114, 114)
                                .addComponent(jBAnularInscripcion)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(JBSalir)
                                .addGap(8, 8, 8))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(213, 213, 213)
                        .addComponent(jLListadoDeMaterias))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addComponent(jLFormularioDeInscripcion)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLFormularioDeInscripcion)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLSeleccioneAlumno)
                    .addComponent(jCBAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addComponent(jLListadoDeMaterias)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRBMateriasInscriptas)
                    .addComponent(jRBMateriasNoInscriptas, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(109, 109, 109)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBInscribir)
                    .addComponent(jBAnularInscripcion)
                    .addComponent(JBSalir))
                .addContainerGap(197, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRBMateriasInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBMateriasInscriptasActionPerformed
borrarFilaTabla();
jRBMateriasNoInscriptas.setSelected(false);
cargarDatosInscriptas();
jBAnularInscripcion.setEnabled(true);
jBInscribir.setEnabled(false);

// TODO  your handling code here:
    }//GEN-LAST:event_jRBMateriasInscriptasActionPerformed

    private void JBSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBSalirActionPerformed
dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_JBSalirActionPerformed

    private void jRBMateriasNoInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBMateriasNoInscriptasActionPerformed
borrarFilaTabla();
jRBMateriasInscriptas.setSelected(false);
cargarDatosNoInscriptas();
jBAnularInscripcion.setEnabled(false);
jBInscribir.setEnabled(true);

    }//GEN-LAST:event_jRBMateriasNoInscriptasActionPerformed

    private void jBInscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBInscribirActionPerformed
int filaSeleccionada = jTMaterias.getSelectedRow() ;
if (filaSeleccionada!=-1){
    
    Alumno a = (Alumno)jCBAlumno.getSelectedItem();
    
    int idMateria = (Integer) modelo.getValueAt(filaSeleccionada, 0);
    
    String nombreMateria = (String)modelo.getValueAt(filaSeleccionada,1);
    
    int anio =( Integer)modelo.getValueAt(filaSeleccionada,2);
    
    Materia m = new Materia(idMateria,nombreMateria,anio,true);
    
    Inscripcion i = new Inscripcion( a,m,0,true);
   
    id.guardarInscripcion(i);
    
    borrarFilaTabla();
    
}
// TODO add your handling code here:, 
    }//GEN-LAST:event_jBInscribirActionPerformed

    private void jBAnularInscripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAnularInscripcionActionPerformed

   int filaSeleccionada = jTMaterias.getSelectedRow();
   
   if (filaSeleccionada!= -1){
       
      Alumno a = (Alumno)jCBAlumno.getSelectedItem();
      
       int idMateria = (Integer)modelo.getValueAt(filaSeleccionada,0);
       
       id.borrarInscripcionMateriaAlumno(a.getIdAlumno(), idMateria);

       borrarFilaTabla();   }
   // TODO add your handling code here:
    }//GEN-LAST:event_jBAnularInscripcionActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBSalir;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jBAnularInscripcion;
    private javax.swing.JButton jBInscribir;
    private javax.swing.JComboBox<Alumno> jCBAlumno;
    private javax.swing.JLabel jLFormularioDeInscripcion;
    private javax.swing.JLabel jLListadoDeMaterias;
    private javax.swing.JLabel jLSeleccioneAlumno;
    private javax.swing.JRadioButton jRBMateriasInscriptas;
    private javax.swing.JRadioButton jRBMateriasNoInscriptas;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTMaterias;
    // End of variables declaration//GEN-END:variables
}
